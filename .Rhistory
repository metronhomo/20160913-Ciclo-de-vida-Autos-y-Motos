#0:vivo(censurado)
#1:muerto(no censurado)
str(datos)
attach(datos)
plot(sup.tv,type="s")
plot(riesgo.tv,type="s")
?Weibull
source('C:/Users/Alejandra/Downloads/RTarea1.R')
source('C:/Users/Alejandra/Downloads/RTarea1.R')
source('C:/Users/Alejandra/Downloads/RTarea1.R')
install.packages("nortest")
install.packages("forecast")
install.packages("tseries")
install.packages("timeSeries")
install.packages("descomponer")
install.packages("car")
install.packages("astsa")
install packages("fEcofin",repos="http://r-project.org/",type="source")
install.packages("fEcofin",repos="http://r-project.org/",type="source")
install.packages("forecast")
install.packages("fEcofin",repos="http://r-project.org/",type="source")
install.packages("C:/Users/Alejandra/Downloads/fEcofin_260.72.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/Alejandra/Downloads/forecast_7.1.tar.gz", repos = NULL, type = "source")
install.packages("CombMSC")
exportaciones <- read.csv("C:/Users/Alejandra/Downloads/exportaciones.csv")
View(exportaciones)
serie=ts(datos,star=c(Ene 1970,1),frecuency=12)
serie=ts(datos,star=c(Ene1970,1),frecuency=12)
serie=ts(datos,star=c(Ene1970,1),frequency=12)
datos=dat[,2]
data(exportaciones)
View(exportaciones)
View(exportaciones)
data(exportaciones)
data(exportaciones )
help(exportaciones)
data(exportaciones )
exportaciones <- read.delim("C:/Users/Alejandra/Downloads/exportaciones.txt")
View(exportaciones)
serie=ts(datos,star=c(Ene1970,1),frequency=12)
datos=dat[,2]
dat=exportaciones
data(exportaciones)
data(exportaciones)
data(exportaciones)
dat=exportaciones
datos=dat[,2]
serie=ts(datos,star=c(Ene1970,1),frequency=12)
serie=ts(datos,star=c(Ene 1970,1),frequency=12)
datos=dat[,2]
serie=ts(datos,star=c(Ene 1970,1),frequency=12)
serie=ts(datos,start=c(Ene 1970,1),frequency=12)
serie=ts(datos,start=c(Ene1970,1),frequency=12)
serie=ts(datos,start=c(Ene 1970,1),frequency=12)
serie=ts(datos,start=c("Ene 1970",1),frequency=12)
serie=ts(datos,start=c(1,1),frequency=12)
plot(serie.xlab="Fecha",ylab="INDICE.GENERAL.DE.PRECIOS.DE.LAS.EXPORTACIONES..EN.DOLARES",col=blue,main="Serie de tiempo")
plot(serie,xlab="Fecha",ylab="INDICE.GENERAL.DE.PRECIOS.DE.LAS.EXPORTACIONES..EN.DOLARES",col=blue,main="Serie de tiempo")
plot(serie,xlab="Fecha",ylab="INDICE.GENERAL.DE.PRECIOS.DE.LAS.EXPORTACIONES..EN.DOLARES",col=red,main="Serie de tiempo")
plot(serie,xlab="Fecha",ylab="INDICE.GENERAL.DE.PRECIOS.DE.LAS.EXPORTACIONES..EN.DOLARES",col="red",main="Serie de tiempo")
acf(serie,na.action=na;pass,lag.max=300)
acf(serie,na.action=na:pass,lag.max=300)
serie2=log(serie)
serie3=diff(serie2)
par(mfrow=c(3,1))
plot(serie,xlab="Fecha",ylab="INDICE.GENERAL.DE.PRECIOS.DE.LAS.EXPORTACIONES..EN.DOLARES",col="red",main="Serie de tiempo Original")
plot(serie2,xlab="Fecha",ylab="INDICE.GENERAL.DE.PRECIOS.DE.LAS.EXPORTACIONES..EN.DOLARES",col="blue",main"Logaritmo de la serie de tiempo")
plot(serie2,xlab="Fecha",ylab="INDICE.GENERAL.DE.PRECIOS.DE.LAS.EXPORTACIONES..EN.DOLARES",col="blue",main="Logaritmo de la serie de tiempo")
plot(serie3,xlab="Fecha",ylab="INDICE.GENERAL.DE.PRECIOS.DE.LAS.EXPORTACIONES..EN.DOLARES",col="green",main="Logaritmo de la serie de tiempo diferenciada")
abline(h=0,col="magenta",lw=2)
help(abline)
par(mfrow=c(2,1))
help(mfrow)
help(mfrow)
help("par")
acf(serie3,na.action=na.pass,main="Autocorrelacion",lag.max=100)
pacf(serie3,na.action=na.pass,main="Autocorrelacion parcial",lag.max=100)
View(dat)
plot(serie4,xlab="Fecha",ylab="INDICE.GENERAL.DE.PRECIOS.DE.LAS.EXPORTACIONES..EN.DOLARES",col="red",main="Serie de tiempo Original dif 2")
serie4=diff(serie3)
plot(serie4,xlab="Fecha",ylab="INDICE.GENERAL.DE.PRECIOS.DE.LAS.EXPORTACIONES..EN.DOLARES",col="red",main="Serie de tiempo Original dif 2")
abline(h=0,col="magenta",lw=2)
install.packages("urca")
"trend"
CADFtest(serie3, X = NULL, type = c("trend", "drift", "none"),
CADFtest(serie3, X = NULL, type = c("trend", "drift", "none"),data = list(), max.lag.y = 1, min.lag.X = 0, max.lag.X = 0, dname = NULL, criterion = c("none", "BIC", "AIC", "HQC", "MAIC"), ...)
CADFtest(serie3)
CADFtest(serie3)
ADFtest(serie3)
cADF(serie3)
install.packages("CADFtest")
install.packages("C:/Users/Alejandra/Downloads/CADFtest_0.3-2.tar.gz", repos = NULL, type = "source")
cADF(serie3)
install.packages("CADFtest")
cADF(serie3)
CADF(serie3)
modelo=arima(serie3,order=c(1,1,1))
attributes(modelo)
CADF(serie3)
CADF (serie3)
CADFtest (serie3)
CADFtest (serie3)
summary(modelo)
CADFtest(serie3)
install.packages("fUnitRoots")
CADFtest(serie3)
CADFtest(serie3)
ADFtest(serie3)
install.packages("C:/Users/Alejandra/Downloads/fUnitRoots_3010.78.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/Alejandra/Downloads/fBasics_3011.87.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/Alejandra/Downloads/stabledist_0.7-0.tar.gz", repos = NULL, type = "source")
CADFtest(serie3)
ADFtest(serie3)
install.packages("C:/Users/Alejandra/Downloads/gss_2.1-5.tar.gz", repos = NULL, type = "source")
install.packages("gss")
install.packages("stabledist")
install.packages("MASS")
install.packages("C:/Users/Alejandra/Downloads/fBasics_3011.87.tar.gz", repos = NULL, type = "source")
install.packages("fBasics")
install.packages("fUnitRoots")
CADFtest(serie3)
unitrootTest(serie3,lags=1,type=nc,title=NULL,DESCRIPTION=NULL)
adfTest(serie3,lags=1,type=nc,title=NULL,DESCRIPTION=NULL)
adfTest(serie3,lags=1,type=nc,title=NULL,DESCRIPTION=NULL)
adfTest(serie3,lags=1,type=nc,title=NULL,DESCRIPTION=NULL)
unitrootTest(serie3,lags=1,type=nc,title=NULL,DESCRIPTION=NULL)
CADFtest(serie3)
ADFtest(serie3)
library("fUnitRoots", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("astsa", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("boot", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("CADFtest", lib.loc="C:/Program Files/R/R-3.0.1/library")
CADFtest(serie3)
ADFtest(serie3)
library("car", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("class", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("cluster", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("codetools", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("CombMSC", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("compiler", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("datasets", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("descomponer", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("dynlm", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("fBasics", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("foreign", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("gdata", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("gmodels", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("graphics", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("grDevices", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("grid", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("gss", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("gtools", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("KernSmooth", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("KMsurv", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("lattice", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("lme4", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("lmtest", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("manipulate", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("MASS", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("Matrix", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("methods", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("mgcv", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("minqa", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("nlme", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("nloptr", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("nnet", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("nortest", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("parallel", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("pastecs", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("pbkrtest", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("plyr", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("quadprog", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("quantreg", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("Rcpp", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("RcppEigen", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("reshape2", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("rpart", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("rstudio", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("sandwich", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("SparseM", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("spatial", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("splines", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("stabledist", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("stats", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("stats4", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("stringr", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("survival", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("taRifx", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("tcltk", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("timeDate", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("timeSeries", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("tools", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("translations", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("tseries", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("urca", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("utils", lib.loc="C:/Program Files/R/R-3.0.1/library")
library("zoo", lib.loc="C:/Program Files/R/R-3.0.1/library")
CADFtest(serie3)
ADFtest(serie3)
unitrootTest(serie3,lags=1,type=nc,title=NULL,DESCRIPTION=NULL)
adfTest(serie3,lags=1,type=nc,title=NULL,DESCRIPTION=NULL)
ADF.test(serie3)
adfTest(serie3,lags=1,type=nc,title=NULL)
ADFtest(serie3)
unitrootTest(serie3,lags=1,type="nc",title=NULL,DESCRIPTION=NULL)
adfTest(serie3,lags=1,type="nc",title=NULL)
unitrootTest(serie3,lags=1,type="nc",title=NULL)
CADFtest(serie3)
ADFtest(serie3)
unitrootTest(serie3,lags=1,type="nc",title=NULL)
ADFtest(serie3)
adf.test(serie3)
plot(serie,xlab="Fecha",ylab="INDICE.GENERAL.DE.PRECIOS.DE.LAS.EXPORTACIONES..EN.DOLARES",col="red",main="Serie de tiempo")
adf.test(serie)
adf.test(serie,alternative=c("stationary"),k=50)
htest(adf.test(serie,alternative=c("stationary"),k=50))
adf.test(serie2,alternative=c("stationary"),k=50)
serie5=diff(serie)
adf.test(serie5,alternative=c("stationary"),k=50)
plot(serie5,xlab="Fecha",ylab="INDICE.GENERAL.DE.PRECIOS.DE.LAS.EXPORTACIONES..EN.DOLARES",col="green",main=" serie de tiempo diferenciada")
unitrootTest(serie5,lags=18,type="nc",title=NULL)
acf(serie5,na.action=na.pass,main="Autocorrelacion",lag.max=100)
pacf(serie5,na.action=na.pass,main="Autocorrelacion parcial",lag.max=100)
modelo=arima(serie5,order=c(1,1,1))
attributes(modelo)
summary(modelo)
modelo$coef
modelo$coef
best.arima(serie5)
serie5
auto.arima(serie5)
install.packages("C:/Users/Alejandra/Downloads/forecast_7.1.zip", repos = NULL, type = "win.binary")
auto.arima(serie5)
auto.arima(serie5)
library("forecast", lib.loc="C:/Program Files/R/R-3.0.1/library")
auto.arima(serie5)
auto.arima(serie5)
install.packages("C:/Users/Alejandra/Downloads/forecast_7.1.zip", repos = NULL, type = "win.binary")
library("forecast", lib.loc="C:/Program Files/R/R-3.0.1/library")
auto.arima(serie5)
install.packages("C:/Users/Alejandra/Downloads/forecast_7.1 (1).zip", repos = NULL, type = "win.binary")
auto.arima(serie5)
auto.arima(serie5)
remove.packages("forecast")
install.packages("C:/Users/Alejandra/Downloads/forecast_7.1 (2).tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/Alejandra/Downloads/forecast_7.1 (2).tar.gz", repos = NULL, type = "source")
adf.test(serie5,alternative=c("stationary"),k=50)
install.packages("zoo")
install.packages("timeDate")
install.packages("tseries")
library(Rcpp)
install.packages("fracdiff")
install.packages("Rcpp")
install.packages("RcppArmadillo")
install.packages("ggplot2")
install.packages("colorspace")
install.packages("forecast")
auto.arima(serie5)
library("forecast", lib.loc="C:/Program Files/R/R-3.0.2/library")
auto.arima(serie5)
auto.arima(serie5, d=NA, D=NA, max.p=5, max.q=5,max.P=3, max.Q=3, max.order=7, max.d=2, max.D=1, start.p=2, start.q=2, start.P=1, start.Q=1,stationary=TRUE, seasonal=FALSE, ic=c("aicc", "aic", "bic"), stepwise=TRUE, trace=FALSE,approximation=(length(x)>100 | frequency(x)>12), xreg=NULL,test=c("kpss","adf","pp"), seasonal.test=c("ocsb","ch"),allowdrift=TRUE, allowmean=TRUE, lambda=NULL, biasadj=FALSE,parallel=FALSE, num.cores=2)
auto.arima(serie5, d=NA, D=NA, max.p=5, max.q=5,max.P=3, max.Q=3, max.order=7, max.d=2, max.D=1, start.p=2, start.q=2, start.P=1, start.Q=1,stationary=TRUE, seasonal=FALSE, ic=c("aicc", "aic", "bic"), stepwise=TRUE, trace=FALSE,approximation=(length(x)>100 | frequency(x)>12), xreg=NULL,test=c("kpss","adf","pp"), seasonal.test=c("ocsb","ch"),allowdrift=TRUE, lambda=NULL, parallel=FALSE, num.cores=2)
auto.arima(serie5, d=NA, D=NA, max.p=5, max.q=5,max.P=3, max.Q=3, max.order=7, max.d=2, max.D=1, start.p=2, start.q=2, start.P=1, start.Q=1,stationary=TRUE, seasonal=FALSE, ic=c("aicc", "aic", "bic"), stepwise=TRUE, trace=FALSE,approximation=(length(serie5)>100 | frequency(serie5)>12), xreg=NULL,test=c("kpss","adf","pp"), seasonal.test=c("ocsb","ch"),allowdrift=TRUE, lambda=NULL, parallel=FALSE, num.cores=2)
auto.arima(serie5, d=0, D=NA, max.p=5, max.q=5,max.P=3, max.Q=3, max.order=7, max.d=2, max.D=1, start.p=2, start.q=2, start.P=1, start.Q=1,stationary=TRUE, seasonal=FALSE, ic=c("aicc", "aic", "bic"), stepwise=TRUE, trace=FALSE,approximation=(length(serie5)>100 | frequency(serie5)>12), xreg=NULL,test=c("kpss","adf","pp"), seasonal.test=c("ocsb","ch"),allowdrift=TRUE, lambda=NULL, parallel=FALSE, num.cores=2)
auto.arima(serie5, d=0, D=NA, max.p=5, max.q=5,max.P=3, max.Q=3, max.order=7, max.d=2, max.D=1, start.p=2, start.q=2, start.P=1, start.Q=1,stationary=TRUE, seasonal=FALSE, ic=c("aicc", "aic", "bic"), stepwise=TRUE, trace=FALSE,approximation=(length(serie5)>100 | frequency(serie5)>12), xreg=NULL,test=c("kpss","adf","pp"), seasonal.test=c("ocsb","ch"),allowdrift=TRUE, lambda=NULL, parallel=FALSE, num.cores=2)
auto.arima(serie5, d=0, D=12, max.p=5, max.q=5,max.P=3, max.Q=3, max.order=7, max.d=2, max.D=1, start.p=2, start.q=2, start.P=1, start.Q=1,stationary=TRUE, seasonal=FALSE, ic=c("aicc", "aic", "bic"), stepwise=TRUE, trace=FALSE,approximation=(length(serie5)>100 | frequency(serie5)>12), xreg=NULL,test=c("kpss","adf","pp"), seasonal.test=c("ocsb","ch"),allowdrift=TRUE, lambda=NULL, parallel=FALSE, num.cores=2)
modelo$coef
bestmodelo<-best.arima(serie5)
Modelo2<-auto.arima(serie5, d=0, D=12, max.p=5, max.q=5,max.P=3, max.Q=3, max.order=7, max.d=2, max.D=1, start.p=2, start.q=2, start.P=1, start.Q=1,stationary=TRUE, seasonal=FALSE, ic=c("aicc", "aic", "bic"), stepwise=TRUE, trace=FALSE,approximation=(length(serie5)>100 | frequency(serie5)>12), xreg=NULL,test=c("kpss","adf","pp"), seasonal.test=c("ocsb","ch"),allowdrift=TRUE, lambda=NULL, parallel=FALSE, num.cores=2)
Modelo2<-auto.arima(serie5, d=0, D=12, max.p=5, max.q=5,max.P=3, max.Q=3, max.order=7, max.d=2, max.D=1, start.p=2, start.q=2, start.P=1, start.Q=1,stationary=TRUE, seasonal=FALSE, ic=c("aicc", "aic", "bic"), stepwise=TRUE, trace=FALSE,approximation=(length(serie5)>100 | frequency(serie5)>12), xreg=NULL,test=c("kpss","adf","pp"), seasonal.test=c("ocsb","ch"),allowdrift=TRUE, lambda=NULL, parallel=FALSE, num.cores=2)
Modelo2=auto.arima(serie5, d=0, D=12, max.p=5, max.q=5,max.P=3, max.Q=3, max.order=7, max.d=2, max.D=1, start.p=2, start.q=2, start.P=1, start.Q=1,stationary=TRUE, seasonal=FALSE, ic=c("aicc", "aic", "bic"), stepwise=TRUE, trace=FALSE,approximation=(length(serie5)>100 | frequency(serie5)>12), xreg=NULL,test=c("kpss","adf","pp"), seasonal.test=c("ocsb","ch"),allowdrift=TRUE, lambda=NULL, parallel=FALSE, num.cores=2)
attributes(modelo)
summary(modelo)
attributes(modelo2)
modelo2=auto.arima(serie5, d=0, D=12, max.p=5, max.q=5,max.P=3, max.Q=3, max.order=7, max.d=2, max.D=1, start.p=2, start.q=2, start.P=1, start.Q=1,stationary=TRUE, seasonal=FALSE, ic=c("aicc", "aic", "bic"), stepwise=TRUE, trace=FALSE,approximation=(length(serie5)>100 | frequency(serie5)>12), xreg=NULL,test=c("kpss","adf","pp"), seasonal.test=c("ocsb","ch"),allowdrift=TRUE, lambda=NULL, parallel=FALSE, num.cores=2)
auto.arima(serie5, d=0, D=12, max.p=5, max.q=5,max.P=3, max.Q=3, max.order=7, max.d=2, max.D=1, start.p=2, start.q=2, start.P=1, start.Q=1,stationary=TRUE, seasonal=FALSE, ic=c("aicc", "aic", "bic"), stepwise=TRUE, trace=FALSE,approximation=(length(serie5)>100 | frequency(serie5)>12), xreg=NULL,test=c("kpss","adf","pp"), seasonal.test=c("ocsb","ch"),allowdrift=TRUE, lambda=NULL, parallel=FALSE, num.cores=2)
auto.arima(serie5, d=1, D=12, max.p=5, max.q=5,max.P=3, max.Q=3, max.order=7, max.d=2, max.D=1, start.p=2, start.q=2, start.P=1, start.Q=1,stationary=TRUE, seasonal=FALSE, ic=c("aicc", "aic", "bic"), stepwise=TRUE, trace=FALSE,approximation=(length(serie5)>100 | frequency(serie5)>12), xreg=NULL,test=c("kpss","adf","pp"), seasonal.test=c("ocsb","ch"),allowdrift=TRUE, lambda=NULL, parallel=FALSE, num.cores=2)
auto.arima(serie5, d=1, D=12, max.p=5, max.q=5,max.P=3, max.Q=3, max.order=7, max.d=2, max.D=1, start.p=2, start.q=2, start.P=1, start.Q=1,stationary=TRUE, seasonal=FALSE, ic=c("aicc", "aic", "bic"), stepwise=TRUE, trace=FALSE,approximation=(length(serie5)>100 | frequency(serie5)>12), xreg=NULL,test=c("kpss","adf","pp"), seasonal.test=c("ocsb","ch"),allowdrift=TRUE, lambda=NULL, parallel=FALSE, num.cores=2)
modelo$coef
adf.test(serie5,alternative=c("stationary"),k=50)
install.packages("grepl")
devtools::install_github("metronhomo/brostatistics")
devtools::install_github("metronhomo/brostatistics")
devtools::install_github("metronhomo/brostatistics")
frecuentator(fTtabla = datos[((datos$P10=="Automóvil") & (datos$P18=="Si")),], fTvariables = "P18_C",fTlevels = T,fbanner = bandera1)
library(dplyr)
library(brostatistics)
library(sjmisc)
datos <- gaseosa(xfile = "CICLO DE VIDA DENTRO DEL HOGAR AUTOS_MOTOS 13-09-2016 18-23-09.csv",yfile = "CICLO DE VIDA DENTRO DEL HOGAR AUTOS_MOTOS_DataMap_13-09-2016 18_24_04.xlsx")
#
names(datos)[188] <- "P15_12_1"
#
saveRDS(datos,"datos.rds")
datos <- readRDS(
"datos.rds"
)
###Vamos a botar los casos que tienen Na en edo civil y nos quedamos con 60 para completar la cuota de autos
datos<-datos[!(datos$P15=='Moto' & is.na(datos$A4)),]
datos<-datos[!(datos$P15=='Ambos' & is.na(datos$A4)),]
set.seed(9)
vector<-datos[(datos$P15=='Auto' & is.na(datos$A4)),"ResponseID"][sample(x = 1:86,size = 26,replace = F)]
datos<-datos[!(datos$ResponseID %in% vector),]
# table(datos$P15)
# summary(datos$A4)
##########################################################################################
##########################################################################################
# Modificaciones necesarias
datos$A7<-droplevels(datos$A7)
# Saco variable "total
datos$Total <- factor(1,levels = 1,labels = "Total")
datos$A4<- as.character(datos$A4)
datos[is.na(datos$A4), "A4"]<-"NsNc"
datos$A4<-as.factor(datos$A4)
datos$A6<- as.character(datos$A6)
datos[is.na(datos$A6), "A6"]<-"NsNc"
datos$A6<-as.factor(datos$A6)
#Creo la variable para el Banner
datos$EdocivilHijos <-5
datos[(datos$A4=="Casado(a)"| datos$A4=='Unión libre') & datos$A6=='Sí',"EdocivilHijos"] <-1
datos[(datos$A4=="Casado(a)"| datos$A4=='Unión libre') & datos$A6=='No',"EdocivilHijos"] <-2
datos[(datos$A4=="Soltero(a)"|datos$A4=="Divorciado(a)"| datos$A4=="Viudo(a)") & datos$A6=='Sí',"EdocivilHijos"] <-3
datos[(datos$A4=="Soltero(a)"|datos$A4=="Divorciado(a)"| datos$A4=="Viudo(a)") & datos$A6=='No',"EdocivilHijos"] <-4
datos$EdocivilHijos <- factor(datos$EdocivilHijos,levels = c(1,2,3,4,5),labels = c("Casado con hijos","Casado sin hijos","Soltero con Hijos","Soltero sin HIjos","No contestó"))
###Creo la variable de tiempo casados
datos$TiempoCasados = datos$A5*12 + datos$A5_MESES
cortes<-list(
"4 años o menos"= c(0:48),
"De 5 a 9 años"= c(49:108),
"De 10 a 14 años"= c(109:168),
"De 15 a 19 años"= c(169:228),
"20 años o más"= c(228:600)
)
datos$TiempoJuntos<-NA
for(i in 1:length(cortes)){
misCN<- names(cortes)[i]
misCCn<- cortes[[i]]
datos[datos$TiempoCasados %in% misCCn,"TiempoJuntos"]<-i
}
datos$TiempoJuntos<- factor(datos$TiempoJuntos,levels = c(1,2,3,4,5), labels = names(cortes))
############# Creo la variable de edad de hijos
hijitos<-list(
"A9Primero"=c("A9_Hijo1_A_os","A9_Hijo1_Meses"),
"A9Segundo"=c("A9_Hijo2_A_os","A9_Hijo2_Meses"),
"A9Tercero"=c("A9_Hijo3_A_os","A9_Hijo3_Meses"),
"A9Cuarto"=c("A9_Hijo4_A_os","A9_Hijo4_Meses"),
"A9Quinto"=c("A9_Hijo5_A_os","A9_Hijo5_Meses"),
"A9Sexto"=c("A9_Hijo6_A_os","A9_Hijo6_Meses")
)
for(i in 1:length(hijitos)){
# i <- 1
hijitosSub <- hijitos[[i]]
nhijitosSub <- names(hijitos)[i]
edadhijo<-as.numeric(datos[,hijitosSub[1]])
edadhijo<- edadhijo*12
edadhijo<-rowSums(cbind(edadhijo,as.numeric(datos[,hijitosSub[2]])),na.rm = T)
edadhijo[is.na(datos[,hijitosSub[1]]) & is.na(datos[,hijitosSub[2]])]<-NA
edadhijo<- round(edadhijo,0)
cortes<-list(
"menos de 4 años"= c(0:48),
"entre 5 y 9 años"= c(49:108),
"entre 10 y 14 años"= c(109:168),
"más de 15 años"= c(169:800)
)
datos[,nhijitosSub]<-NA
for(i in 1:length(cortes)){
misCN<- names(cortes)[i]
misCCn<- cortes[[i]]
datos[edadhijo %in% misCCn,nhijitosSub]<-i
}
datos[,nhijitosSub]<- factor(datos[,nhijitosSub], levels = 1:4,labels = names(cortes))
}
hijitosEdad <- c("A9Primero","A9Segundo","A9Tercero","A9Cuarto","A9Quinto","A9Sexto")
###########Limpieza de variables
#exportarAbiertas(xpa = datos,xpb = "P17_B_BANCO",xpc = "Pregunta Bancos.csv" )
P17_b_bancor<-importaAbiertas(misDatos = datos, misVaria ="P17_B_BANCO",micatalog = read.csv("Pregunta Bancos1.csv"))
datos<- cbind(datos, P17_b_bancor)
#exportarAbiertas(xpa = datos,xpb = "P18_D_BANCO",xpc = "Pregunta BancosD.csv" )
P18_d_bancor<-importaAbiertas(misDatos = datos, misVaria ="P18_D_BANCO",micatalog = read.csv("Pregunta BancosDR.csv"))
datos<- cbind(datos, P18_d_bancor)
P19_b_bancor<-importaAbiertas(misDatos = datos, misVaria ="P19_B_AMBOS_BANCO",micatalog = read.csv("Pregunta BancosDR.csv"))
datos<- cbind(datos, P19_b_bancor)
P20_c_bancor<-importaAbiertas(misDatos = datos, misVaria ="P20_C_AMBOS_BANCO",micatalog = read.csv("Pregunta BancosDR.csv"))
datos<- cbind(datos, P20_c_bancor)
P20_e_bancor<-importaAbiertas(misDatos = datos, misVaria ="P19_E_AMBOS_BANCO",micatalog = read.csv("Pregunta BancosDR.csv"))
datos<- cbind(datos, P20_e_bancor)
P13ModeloLimpia<-importaAbiertas(misDatos = datos, misVaria ="P15_3_MODELO",micatalog = read.csv("Ciclo de vida autos_motos_ModeloVF.csv"))
datos<- cbind(datos, P13ModeloLimpia)
P10ModeloLimpia<-importaAbiertas(misDatos = datos, misVaria ="P15_10_MODELO",micatalog = read.csv("Ciclo de vida autos_motos_ModeloVF.csv"))
datos<- cbind(datos, P10ModeloLimpia)
# exportarAbiertas(datos,c("P15_3_MODELO_1","P15_10_MODELO_1"),xpc = "AbiertasModelo1.csv")
# exportarAbiertas(datos,c("P15_4_1","P15_11_1"),xpc = "AbiertasModeloAño.csv")
P13ModeloLimpia1<-importaAbiertas(misDatos = datos, misVaria ="P15_3_MODELO_1",micatalog = read.csv("Ciclo de vida autos_motos_ModeloVF.csv"))
datos<- cbind(datos, P13ModeloLimpia1)
P10ModeloLimpia1<-importaAbiertas(misDatos = datos, misVaria ="P15_10_MODELO_1",micatalog = read.csv("Ciclo de vida autos_motos_ModeloVF.csv"))
datos<- cbind(datos, P10ModeloLimpia1)
###########################Agrupacion de preguntas
##Uso de transporte
misP <- nombresR(datos,"P15_2")
misP <- matrix(data = misP,nrow = 6,ncol = 5)
listaNombres<-list()
for(i in 1:nrow(misP)){
# i <- 1
yoSoy <- misP[i,1]
yoSoy <- paste("Rr_", yoSoy,sep="")
listaNombres[[i]]<-paste(misP[i,])
names(listaNombres)[[i]]<-yoSoy
}
for(i in 1:length(listaNombres)){
# i<-1
mmm<- names(listaNombres)[i]
mhijitos<- listaNombres[[i]]
datos[,mmm]<-FALSE
for(t in 1:length(mhijitos)){
# t<-2
logico<- datos[,mhijitos[t]]==1
logico[is.na(logico)]<-FALSE
datos[logico,mmm]<-TRUE
}
}
misP <- nombresR(datos,"P15_9_AUTO")
misP <- matrix(data = misP,nrow = 6,ncol = 5)
listaNombres<-list()
for(i in 1:nrow(misP)){
# i <- 1
yoSoy <- misP[i,1]
yoSoy <- paste("Rr_", yoSoy,sep="")
listaNombres[[i]]<-paste(misP[i,])
names(listaNombres)[[i]]<-yoSoy
}
for(i in 1:length(listaNombres)){
# i<-1
mmm<- names(listaNombres)[i]
mhijitos<- listaNombres[[i]]
datos[,mmm]<-FALSE
for(t in 1:length(mhijitos)){
# t<-2
logico<- datos[,mhijitos[t]]==1
logico[is.na(logico)]<-FALSE
datos[logico,mmm]<-TRUE
}
}
misP <- nombresR(datos,"P_15_9_MOTO")
misP <- matrix(data = misP,nrow = 6,ncol = 5)
listaNombres<-list()
for(i in 1:nrow(misP)){
# i <- 1
yoSoy <- misP[i,1]
yoSoy <- paste("Rr_", yoSoy,sep="")
listaNombres[[i]]<-paste(misP[i,])
names(listaNombres)[[i]]<-yoSoy
}
for(i in 1:length(listaNombres)){
# i<-1
mmm<- names(listaNombres)[i]
mhijitos<- listaNombres[[i]]
datos[,mmm]<-FALSE
for(t in 1:length(mhijitos)){
# t<-2
logico<- datos[,mhijitos[t]]==1
logico[is.na(logico)]<-FALSE
datos[logico,mmm]<-TRUE
}
}
##########################################################################################
# Banner
bandera1 <- c("Total","P10","F1Genero","NSE","Edad_Rango","Plaza","EdocivilHijos")
bandera3 <- c("Total","A11")
nombresR(datos,"11")
# names(datos)[1:100]
#
# table(
#   datos$P10
# )
# datos[datos$P10=="Automóvil",]
#
table(datos$EdocivilHijos)
table(datos$EdocivilHijos)
library(dplyr)
library(brostatistics)
library(sjmisc)
datos <- gaseosa(xfile = "CICLO DE VIDA DENTRO DEL HOGAR AUTOS_MOTOS 13-09-2016 18-23-09.csv",yfile = "CICLO DE VIDA DENTRO DEL HOGAR AUTOS_MOTOS_DataMap_13-09-2016 18_24_04.xlsx")
#
names(datos)[188] <- "P15_12_1"
#
saveRDS(datos,"datos.rds")
datos <- readRDS(
"datos.rds"
)
setwd("~/GitHub/20160913-Ciclo-de-vida-Autos-y-Motos")
library(dplyr)
library(brostatistics)
library(sjmisc)
datos <- gaseosa(xfile = "CICLO DE VIDA DENTRO DEL HOGAR AUTOS_MOTOS 13-09-2016 18-23-09.csv",yfile = "CICLO DE VIDA DENTRO DEL HOGAR AUTOS_MOTOS_DataMap_13-09-2016 18_24_04.xlsx")
#
names(datos)[188] <- "P15_12_1"
#
saveRDS(datos,"datos.rds")
datos <- readRDS(
"datos.rds"
)
setwd("~/GitHub/20160913-Ciclo-de-vida-Autos-y-Motos")
library(dplyr)
library(brostatistics)
library(sjmisc)
datos <- gaseosa(xfile = "CICLO DE VIDA DENTRO DEL HOGAR AUTOS_MOTOS 13-09-2016 18-23-09.csv",yfile = "CICLO DE VIDA DENTRO DEL HOGAR AUTOS_MOTOS_DataMap_13-09-2016 18_24_04.xlsx")
#
names(datos)[188] <- "P15_12_1"
#
saveRDS(datos,"datos.rds")
datos <- readRDS(
"datos.rds"
)
