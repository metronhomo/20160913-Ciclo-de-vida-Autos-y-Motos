ADFtest(serie3)
unitrootTest(serie3,lags=1,type="nc",title=NULL,DESCRIPTION=NULL)
adfTest(serie3,lags=1,type="nc",title=NULL)
unitrootTest(serie3,lags=1,type="nc",title=NULL)
CADFtest(serie3)
ADFtest(serie3)
unitrootTest(serie3,lags=1,type="nc",title=NULL)
ADFtest(serie3)
adf.test(serie3)
plot(serie,xlab="Fecha",ylab="INDICE.GENERAL.DE.PRECIOS.DE.LAS.EXPORTACIONES..EN.DOLARES",col="red",main="Serie de tiempo")
adf.test(serie)
adf.test(serie,alternative=c("stationary"),k=50)
htest(adf.test(serie,alternative=c("stationary"),k=50))
adf.test(serie2,alternative=c("stationary"),k=50)
serie5=diff(serie)
adf.test(serie5,alternative=c("stationary"),k=50)
plot(serie5,xlab="Fecha",ylab="INDICE.GENERAL.DE.PRECIOS.DE.LAS.EXPORTACIONES..EN.DOLARES",col="green",main=" serie de tiempo diferenciada")
unitrootTest(serie5,lags=18,type="nc",title=NULL)
acf(serie5,na.action=na.pass,main="Autocorrelacion",lag.max=100)
pacf(serie5,na.action=na.pass,main="Autocorrelacion parcial",lag.max=100)
modelo=arima(serie5,order=c(1,1,1))
attributes(modelo)
summary(modelo)
modelo$coef
modelo$coef
best.arima(serie5)
serie5
auto.arima(serie5)
install.packages("C:/Users/Alejandra/Downloads/forecast_7.1.zip", repos = NULL, type = "win.binary")
auto.arima(serie5)
auto.arima(serie5)
library("forecast", lib.loc="C:/Program Files/R/R-3.0.1/library")
auto.arima(serie5)
auto.arima(serie5)
install.packages("C:/Users/Alejandra/Downloads/forecast_7.1.zip", repos = NULL, type = "win.binary")
library("forecast", lib.loc="C:/Program Files/R/R-3.0.1/library")
auto.arima(serie5)
install.packages("C:/Users/Alejandra/Downloads/forecast_7.1 (1).zip", repos = NULL, type = "win.binary")
auto.arima(serie5)
auto.arima(serie5)
remove.packages("forecast")
install.packages("C:/Users/Alejandra/Downloads/forecast_7.1 (2).tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/Alejandra/Downloads/forecast_7.1 (2).tar.gz", repos = NULL, type = "source")
adf.test(serie5,alternative=c("stationary"),k=50)
install.packages("zoo")
install.packages("timeDate")
install.packages("tseries")
library(Rcpp)
install.packages("fracdiff")
install.packages("Rcpp")
install.packages("RcppArmadillo")
install.packages("ggplot2")
install.packages("colorspace")
install.packages("forecast")
auto.arima(serie5)
library("forecast", lib.loc="C:/Program Files/R/R-3.0.2/library")
auto.arima(serie5)
auto.arima(serie5, d=NA, D=NA, max.p=5, max.q=5,max.P=3, max.Q=3, max.order=7, max.d=2, max.D=1, start.p=2, start.q=2, start.P=1, start.Q=1,stationary=TRUE, seasonal=FALSE, ic=c("aicc", "aic", "bic"), stepwise=TRUE, trace=FALSE,approximation=(length(x)>100 | frequency(x)>12), xreg=NULL,test=c("kpss","adf","pp"), seasonal.test=c("ocsb","ch"),allowdrift=TRUE, allowmean=TRUE, lambda=NULL, biasadj=FALSE,parallel=FALSE, num.cores=2)
auto.arima(serie5, d=NA, D=NA, max.p=5, max.q=5,max.P=3, max.Q=3, max.order=7, max.d=2, max.D=1, start.p=2, start.q=2, start.P=1, start.Q=1,stationary=TRUE, seasonal=FALSE, ic=c("aicc", "aic", "bic"), stepwise=TRUE, trace=FALSE,approximation=(length(x)>100 | frequency(x)>12), xreg=NULL,test=c("kpss","adf","pp"), seasonal.test=c("ocsb","ch"),allowdrift=TRUE, lambda=NULL, parallel=FALSE, num.cores=2)
auto.arima(serie5, d=NA, D=NA, max.p=5, max.q=5,max.P=3, max.Q=3, max.order=7, max.d=2, max.D=1, start.p=2, start.q=2, start.P=1, start.Q=1,stationary=TRUE, seasonal=FALSE, ic=c("aicc", "aic", "bic"), stepwise=TRUE, trace=FALSE,approximation=(length(serie5)>100 | frequency(serie5)>12), xreg=NULL,test=c("kpss","adf","pp"), seasonal.test=c("ocsb","ch"),allowdrift=TRUE, lambda=NULL, parallel=FALSE, num.cores=2)
auto.arima(serie5, d=0, D=NA, max.p=5, max.q=5,max.P=3, max.Q=3, max.order=7, max.d=2, max.D=1, start.p=2, start.q=2, start.P=1, start.Q=1,stationary=TRUE, seasonal=FALSE, ic=c("aicc", "aic", "bic"), stepwise=TRUE, trace=FALSE,approximation=(length(serie5)>100 | frequency(serie5)>12), xreg=NULL,test=c("kpss","adf","pp"), seasonal.test=c("ocsb","ch"),allowdrift=TRUE, lambda=NULL, parallel=FALSE, num.cores=2)
auto.arima(serie5, d=0, D=NA, max.p=5, max.q=5,max.P=3, max.Q=3, max.order=7, max.d=2, max.D=1, start.p=2, start.q=2, start.P=1, start.Q=1,stationary=TRUE, seasonal=FALSE, ic=c("aicc", "aic", "bic"), stepwise=TRUE, trace=FALSE,approximation=(length(serie5)>100 | frequency(serie5)>12), xreg=NULL,test=c("kpss","adf","pp"), seasonal.test=c("ocsb","ch"),allowdrift=TRUE, lambda=NULL, parallel=FALSE, num.cores=2)
auto.arima(serie5, d=0, D=12, max.p=5, max.q=5,max.P=3, max.Q=3, max.order=7, max.d=2, max.D=1, start.p=2, start.q=2, start.P=1, start.Q=1,stationary=TRUE, seasonal=FALSE, ic=c("aicc", "aic", "bic"), stepwise=TRUE, trace=FALSE,approximation=(length(serie5)>100 | frequency(serie5)>12), xreg=NULL,test=c("kpss","adf","pp"), seasonal.test=c("ocsb","ch"),allowdrift=TRUE, lambda=NULL, parallel=FALSE, num.cores=2)
modelo$coef
bestmodelo<-best.arima(serie5)
Modelo2<-auto.arima(serie5, d=0, D=12, max.p=5, max.q=5,max.P=3, max.Q=3, max.order=7, max.d=2, max.D=1, start.p=2, start.q=2, start.P=1, start.Q=1,stationary=TRUE, seasonal=FALSE, ic=c("aicc", "aic", "bic"), stepwise=TRUE, trace=FALSE,approximation=(length(serie5)>100 | frequency(serie5)>12), xreg=NULL,test=c("kpss","adf","pp"), seasonal.test=c("ocsb","ch"),allowdrift=TRUE, lambda=NULL, parallel=FALSE, num.cores=2)
Modelo2<-auto.arima(serie5, d=0, D=12, max.p=5, max.q=5,max.P=3, max.Q=3, max.order=7, max.d=2, max.D=1, start.p=2, start.q=2, start.P=1, start.Q=1,stationary=TRUE, seasonal=FALSE, ic=c("aicc", "aic", "bic"), stepwise=TRUE, trace=FALSE,approximation=(length(serie5)>100 | frequency(serie5)>12), xreg=NULL,test=c("kpss","adf","pp"), seasonal.test=c("ocsb","ch"),allowdrift=TRUE, lambda=NULL, parallel=FALSE, num.cores=2)
Modelo2=auto.arima(serie5, d=0, D=12, max.p=5, max.q=5,max.P=3, max.Q=3, max.order=7, max.d=2, max.D=1, start.p=2, start.q=2, start.P=1, start.Q=1,stationary=TRUE, seasonal=FALSE, ic=c("aicc", "aic", "bic"), stepwise=TRUE, trace=FALSE,approximation=(length(serie5)>100 | frequency(serie5)>12), xreg=NULL,test=c("kpss","adf","pp"), seasonal.test=c("ocsb","ch"),allowdrift=TRUE, lambda=NULL, parallel=FALSE, num.cores=2)
attributes(modelo)
summary(modelo)
attributes(modelo2)
modelo2=auto.arima(serie5, d=0, D=12, max.p=5, max.q=5,max.P=3, max.Q=3, max.order=7, max.d=2, max.D=1, start.p=2, start.q=2, start.P=1, start.Q=1,stationary=TRUE, seasonal=FALSE, ic=c("aicc", "aic", "bic"), stepwise=TRUE, trace=FALSE,approximation=(length(serie5)>100 | frequency(serie5)>12), xreg=NULL,test=c("kpss","adf","pp"), seasonal.test=c("ocsb","ch"),allowdrift=TRUE, lambda=NULL, parallel=FALSE, num.cores=2)
auto.arima(serie5, d=0, D=12, max.p=5, max.q=5,max.P=3, max.Q=3, max.order=7, max.d=2, max.D=1, start.p=2, start.q=2, start.P=1, start.Q=1,stationary=TRUE, seasonal=FALSE, ic=c("aicc", "aic", "bic"), stepwise=TRUE, trace=FALSE,approximation=(length(serie5)>100 | frequency(serie5)>12), xreg=NULL,test=c("kpss","adf","pp"), seasonal.test=c("ocsb","ch"),allowdrift=TRUE, lambda=NULL, parallel=FALSE, num.cores=2)
auto.arima(serie5, d=1, D=12, max.p=5, max.q=5,max.P=3, max.Q=3, max.order=7, max.d=2, max.D=1, start.p=2, start.q=2, start.P=1, start.Q=1,stationary=TRUE, seasonal=FALSE, ic=c("aicc", "aic", "bic"), stepwise=TRUE, trace=FALSE,approximation=(length(serie5)>100 | frequency(serie5)>12), xreg=NULL,test=c("kpss","adf","pp"), seasonal.test=c("ocsb","ch"),allowdrift=TRUE, lambda=NULL, parallel=FALSE, num.cores=2)
auto.arima(serie5, d=1, D=12, max.p=5, max.q=5,max.P=3, max.Q=3, max.order=7, max.d=2, max.D=1, start.p=2, start.q=2, start.P=1, start.Q=1,stationary=TRUE, seasonal=FALSE, ic=c("aicc", "aic", "bic"), stepwise=TRUE, trace=FALSE,approximation=(length(serie5)>100 | frequency(serie5)>12), xreg=NULL,test=c("kpss","adf","pp"), seasonal.test=c("ocsb","ch"),allowdrift=TRUE, lambda=NULL, parallel=FALSE, num.cores=2)
modelo$coef
adf.test(serie5,alternative=c("stationary"),k=50)
install.packages("grepl")
setwd("~/GitHub/20160913-Ciclo-de-vida-Autos-y-Motos")
library(dplyr)
library(brostatistics)
library(sjmisc)
gaseosa
datos <- gaseosa(xfile = "CICLO DE VIDA DENTRO DEL HOGAR AUTOS_MOTOS 13-09-2016 18-23-09.csv",yfile = "CICLO DE VIDA DENTRO DEL HOGAR AUTOS_MOTOS_DataMap_13-09-2016 18_24_04.xlsx")
#
names(datos)[188] <- "P15_12_1"
#
saveRDS(datos,"datos.rds")
datos <- readRDS(
"datos.rds"
)
###Vamos a botar los casos que tienen Na en edo civil y nos quedamos con 60 para completar la cuota de autos
datos<-datos[!(datos$P15=='Moto' & is.na(datos$A4)),]
datos<-datos[!(datos$P15=='Ambos' & is.na(datos$A4)),]
set.seed(9)
vector<-datos[(datos$P15=='Auto' & is.na(datos$A4)),"ResponseID"][sample(x = 1:86,size = 26,replace = F)]
datos<-datos[!(datos$ResponseID %in% vector),]
# table(datos$P15)
# summary(datos$A4)
##########################################################################################
##########################################################################################
# Modificaciones necesarias
datos$A7<-droplevels(datos$A7)
# Saco variable "total
datos$Total <- factor(1,levels = 1,labels = "Total")
datos$A4<- as.character(datos$A4)
datos[is.na(datos$A4), "A4"]<-"NsNc"
datos$A4<-as.factor(datos$A4)
datos$A6<- as.character(datos$A6)
datos[is.na(datos$A6), "A6"]<-"NsNc"
datos$A6<-as.factor(datos$A6)
#Creo la variable para el Banner
datos$EdocivilHijos <-5
datos[(datos$A4=="Casado(a)"| datos$A4=='Unión libre') & datos$A6=='Sí',"EdocivilHijos"] <-1
datos[(datos$A4=="Casado(a)"| datos$A4=='Unión libre') & datos$A6=='No',"EdocivilHijos"] <-2
datos[(datos$A4=="Soltero(a)"|datos$A4=="Divorciado(a)"| datos$A4=="Viudo(a)") & datos$A6=='Sí',"EdocivilHijos"] <-3
datos[(datos$A4=="Soltero(a)"|datos$A4=="Divorciado(a)"| datos$A4=="Viudo(a)") & datos$A6=='No',"EdocivilHijos"] <-4
datos$EdocivilHijos <- factor(datos$EdocivilHijos,levels = c(1,2,3,4,5),labels = c("Casado con hijos","Casado sin hijos","Soltero con Hijos","Soltero sin HIjos","No contestó"))
###Creo la variable de tiempo casados
datos$TiempoCasados = datos$A5*12 + datos$A5_MESES
cortes<-list(
"4 años o menos"= c(0:48),
"De 5 a 9 años"= c(49:108),
"De 10 a 14 años"= c(109:168),
"De 15 a 19 años"= c(169:228),
"20 años o más"= c(228:600)
)
datos$TiempoJuntos<-NA
for(i in 1:length(cortes)){
misCN<- names(cortes)[i]
misCCn<- cortes[[i]]
datos[datos$TiempoCasados %in% misCCn,"TiempoJuntos"]<-i
}
datos$TiempoJuntos<- factor(datos$TiempoJuntos,levels = c(1,2,3,4,5), labels = names(cortes))
############# Creo la variable de edad de hijos
hijitos<-list(
"A9Primero"=c("A9_Hijo1_A_os","A9_Hijo1_Meses"),
"A9Segundo"=c("A9_Hijo2_A_os","A9_Hijo2_Meses"),
"A9Tercero"=c("A9_Hijo3_A_os","A9_Hijo3_Meses"),
"A9Cuarto"=c("A9_Hijo4_A_os","A9_Hijo4_Meses"),
"A9Quinto"=c("A9_Hijo5_A_os","A9_Hijo5_Meses"),
"A9Sexto"=c("A9_Hijo6_A_os","A9_Hijo6_Meses")
)
for(i in 1:length(hijitos)){
# i <- 1
hijitosSub <- hijitos[[i]]
nhijitosSub <- names(hijitos)[i]
edadhijo<-as.numeric(datos[,hijitosSub[1]])
edadhijo<- edadhijo*12
edadhijo<-rowSums(cbind(edadhijo,as.numeric(datos[,hijitosSub[2]])),na.rm = T)
edadhijo[is.na(datos[,hijitosSub[1]]) & is.na(datos[,hijitosSub[2]])]<-NA
edadhijo<- round(edadhijo,0)
cortes<-list(
"menos de 4 años"= c(0:48),
"entre 5 y 9 años"= c(49:108),
"entre 10 y 14 años"= c(109:168),
"más de 15 años"= c(169:800)
)
datos[,nhijitosSub]<-NA
for(i in 1:length(cortes)){
misCN<- names(cortes)[i]
misCCn<- cortes[[i]]
datos[edadhijo %in% misCCn,nhijitosSub]<-i
}
datos[,nhijitosSub]<- factor(datos[,nhijitosSub], levels = 1:4,labels = names(cortes))
}
hijitosEdad <- c("A9Primero","A9Segundo","A9Tercero","A9Cuarto","A9Quinto","A9Sexto")
###########Limpieza de variables
#exportarAbiertas(xpa = datos,xpb = "P17_B_BANCO",xpc = "Pregunta Bancos.csv" )
P17_b_bancor<-importaAbiertas(misDatos = datos, misVaria ="P17_B_BANCO",micatalog = read.csv("Pregunta Bancos1.csv"))
datos<- cbind(datos, P17_b_bancor)
#exportarAbiertas(xpa = datos,xpb = "P18_D_BANCO",xpc = "Pregunta BancosD.csv" )
P18_d_bancor<-importaAbiertas(misDatos = datos, misVaria ="P18_D_BANCO",micatalog = read.csv("Pregunta BancosDR.csv"))
datos<- cbind(datos, P18_d_bancor)
P13ModeloLimpia<-importaAbiertas(misDatos = datos, misVaria ="P15_3_MODELO",micatalog = read.csv("Ciclo de vida autos_motos_ModeloVF.csv"))
datos<- cbind(datos, P13ModeloLimpia)
P10ModeloLimpia<-importaAbiertas(misDatos = datos, misVaria ="P15_10_MODELO",micatalog = read.csv("Ciclo de vida autos_motos_ModeloVF.csv"))
datos<- cbind(datos, P10ModeloLimpia)
##Uso de transporte
misP <- nombresR(datos,"P15_2")
misP <- matrix(data = misP,nrow = 6,ncol = 5)
listaNombres<-list()
for(i in 1:nrow(misP)){
# i <- 1
yoSoy <- misP[i,1]
yoSoy <- paste("Rr_", yoSoy,sep="")
listaNombres[[i]]<-paste(misP[i,])
names(listaNombres)[[i]]<-yoSoy
}
for(i in 1:length(listaNombres)){
# i<-1
mmm<- names(listaNombres)[i]
mhijitos<- listaNombres[[i]]
datos[,mmm]<-FALSE
for(t in 1:length(mhijitos)){
# t<-2
logico<- datos[,mhijitos[t]]==1
logico[is.na(logico)]<-FALSE
datos[logico,mmm]<-TRUE
}
}
misP <- nombresR(datos,"P15_9_AUTO")
misP <- matrix(data = misP,nrow = 6,ncol = 5)
listaNombres<-list()
for(i in 1:nrow(misP)){
# i <- 1
yoSoy <- misP[i,1]
yoSoy <- paste("Rr_", yoSoy,sep="")
listaNombres[[i]]<-paste(misP[i,])
names(listaNombres)[[i]]<-yoSoy
}
for(i in 1:length(listaNombres)){
# i<-1
mmm<- names(listaNombres)[i]
mhijitos<- listaNombres[[i]]
datos[,mmm]<-FALSE
for(t in 1:length(mhijitos)){
# t<-2
logico<- datos[,mhijitos[t]]==1
logico[is.na(logico)]<-FALSE
datos[logico,mmm]<-TRUE
}
}
misP <- nombresR(datos,"P_15_9_MOTO")
misP <- matrix(data = misP,nrow = 6,ncol = 5)
listaNombres<-list()
for(i in 1:nrow(misP)){
# i <- 1
yoSoy <- misP[i,1]
yoSoy <- paste("Rr_", yoSoy,sep="")
listaNombres[[i]]<-paste(misP[i,])
names(listaNombres)[[i]]<-yoSoy
}
for(i in 1:length(listaNombres)){
# i<-1
mmm<- names(listaNombres)[i]
mhijitos<- listaNombres[[i]]
datos[,mmm]<-FALSE
for(t in 1:length(mhijitos)){
# t<-2
logico<- datos[,mhijitos[t]]==1
logico[is.na(logico)]<-FALSE
datos[logico,mmm]<-TRUE
}
}
##########################################################################################
# Banner
bandera1 <- c("Total","P10","F1Genero","NSE","Edad_Rango","Plaza","EdocivilHijos")
bandera3 <- c("TOtal","P14")
nombresR(datos,"11")
# names(datos)[1:100]
#
# table(
#   datos$P10
# )
# datos[datos$P10=="Automóvil",]
#
table(datos$EdocivilHijos)
frecuentator(fTtabla = datos[((datos$P10=="Ambas")& (datos$P16_A_AMBOS== "Sí")&(datos$P16_B_AMBOS_Mi_Esposo___Esposa=="1")),],fTvariables = nombresR(datos,"P16_D_AMBOS_ESPOSAESPOSO"),fTlevels = F,fbanner = bandera1)
nombresR(datos,"P16_D_AMBOS_ESPOSAESPOSO")
table(datos$P16_D_AMBOS_ESPOSAESPOSO_Por_el__hoy_no_circula)
st(datos$P16_D_AMBOS_ESPOSAESPOSO_Por_el__hoy_no_circula)
str(datos$P16_D_AMBOS_ESPOSAESPOSO_Por_el__hoy_no_circula)
datos <- gaseosa(xfile = "CICLO DE VIDA DENTRO DEL HOGAR AUTOS_MOTOS 13-09-2016 18-23-09.csv",yfile = "CICLO DE VIDA DENTRO DEL HOGAR AUTOS_MOTOS_DataMap_13-09-2016 18_24_04.xlsx")
str(datos$P16_D_AMBOS_ESPOSAESPOSO_Por_el__hoy_no_circula)
table(datos$P16_D_AMBOS_ESPOSAESPOSO_Por_el__hoy_no_circula)
gaseosa
datos <- gaseosa(xfile = "CICLO DE VIDA DENTRO DEL HOGAR AUTOS_MOTOS 13-09-2016 18-23-09.csv",yfile = "CICLO DE VIDA DENTRO DEL HOGAR AUTOS_MOTOS_DataMap_13-09-2016 18_24_04.xlsx")
table(datos$P16_D_AMBOS_ESPOSAESPOSO_Por_el__hoy_no_circula)
gas2<-function (xfile, yfile)
{
datosgs <- read.csv(xfile, stringsAsFactors = F)
etiquetasPregunta <- readxl::read_excel(path = yfile, sheet = 1)
etiquetasVariable <- readxl::read_excel(path = yfile, sheet = 2)
for (i in 1:length(datosgs)) {
miDato <- names(datosgs)[i]
subdatosgs <- subset(datosgs, select = miDato)
misEtiquetas <- etiquetasPregunta[etiquetasPregunta$Variable ==
miDato, ]
misEtiquetasVariable <- etiquetasVariable[etiquetasVariable$Variable ==
miDato, ]
if (nrow(misEtiquetas) > 0) {
subdatosgs[, 1] <- set_label(subdatosgs[, 1], misEtiquetas$Label)
}
if (nrow(misEtiquetasVariable) > 0) {
miVector <- as.character(unlist(misEtiquetasVariable[,
3]))
names(miVector) <- as.numeric(unlist(misEtiquetasVariable[,
2]))
subdatosgs[, 1] <- factor(x = subdatosgs[, 1], levels = as.numeric(unlist(misEtiquetasVariable[,
2])), labels = as.character(unlist(misEtiquetasVariable[,
3])))
}
else {
if (length(unique(subdatosgs[, 1])) <= 2) {
subdatosgs[, 1] <- factor(x = subdatosgs[, 1],
levels = c(1, 0), labels = c("TRUE", "FALSE"))
}
}
datosgs[, i] <- subdatosgs
}
return(datosgs)
}
xfile<-"CICLO DE VIDA DENTRO DEL HOGAR AUTOS_MOTOS 13-09-2016 18-23-09.csv"
yfile <- "CICLO DE VIDA DENTRO DEL HOGAR AUTOS_MOTOS_DataMap_13-09-2016 18_24_04.xlsx"
datosgs <- read.csv(xfile, stringsAsFactors = F)
etiquetasPregunta <- readxl::read_excel(path = yfile, sheet = 1)
etiquetasVariable <- readxl::read_excel(path = yfile, sheet = 2)
length(datosgs)
i<-936
miDato <- names(datosgs)[i]
miDato
i<-935
miDato <- names(datosgs)[i]
miDato
subdatosgs <- subset(datosgs, select = miDato)
misEtiquetas <- etiquetasPregunta[etiquetasPregunta$Variable ==
miDato, ]
misEtiquetasVariable <- etiquetasVariable[etiquetasVariable$Variable ==
miDato, ]
nrow(misEtiquetas) > 0
if (nrow(misEtiquetas) > 0) {
subdatosgs[, 1] <- set_label(subdatosgs[, 1], misEtiquetas$Label)
}
nrow(misEtiquetasVariable) > 0
length(unique(subdatosgs[, 1]))
unique(subdatosgs[, 1])
frecuentator(fTtabla = datos, fTvariables = "P16_D_AMBOS_ESPOSAESPOSO_Por_el__hoy_no_circula",fTlevels = F)
frecuentator(fTtabla = datos[((datos$P10=="Ambas")& (datos$P16_A_AMBOS== "Sí")&(datos$P16_B_AMBOS_Mi_Esposo___Esposa=="1")),], fTvariables = "P16_D_AMBOS_ESPOSAESPOSO_Por_el__hoy_no_circula",fTlevels = F)
nombresR(datos,"P16_D_AMBOS_ESPOSAESPOSO")
frecuentator(fTtabla = datos[((datos$P10=="Ambas")& (datos$P16_A_AMBOS== "Sí")&(datos$P16_B_AMBOS_Mi_Esposo___Esposa=="1")),],fTvariables = nombresR(datos,"P16_D_AMBOS_ESPOSAESPOSO")[1:12],fTlevels = F,fbanner = bandera1)
datos <- gaseosa(xfile = "CICLO DE VIDA DENTRO DEL HOGAR AUTOS_MOTOS 13-09-2016 18-23-09.csv",yfile = "CICLO DE VIDA DENTRO DEL HOGAR AUTOS_MOTOS_DataMap_13-09-2016 18_24_04.xlsx")
#
names(datos)[188] <- "P15_12_1"
#
saveRDS(datos,"datos.rds")
datos <- readRDS(
"datos.rds"
)
###Vamos a botar los casos que tienen Na en edo civil y nos quedamos con 60 para completar la cuota de autos
datos<-datos[!(datos$P15=='Moto' & is.na(datos$A4)),]
datos<-datos[!(datos$P15=='Ambos' & is.na(datos$A4)),]
set.seed(9)
vector<-datos[(datos$P15=='Auto' & is.na(datos$A4)),"ResponseID"][sample(x = 1:86,size = 26,replace = F)]
datos<-datos[!(datos$ResponseID %in% vector),]
# table(datos$P15)
# summary(datos$A4)
##########################################################################################
##########################################################################################
# Modificaciones necesarias
datos$A7<-droplevels(datos$A7)
# Saco variable "total
datos$Total <- factor(1,levels = 1,labels = "Total")
datos$A4<- as.character(datos$A4)
datos[is.na(datos$A4), "A4"]<-"NsNc"
datos$A4<-as.factor(datos$A4)
datos$A6<- as.character(datos$A6)
datos[is.na(datos$A6), "A6"]<-"NsNc"
datos$A6<-as.factor(datos$A6)
#Creo la variable para el Banner
datos$EdocivilHijos <-5
datos[(datos$A4=="Casado(a)"| datos$A4=='Unión libre') & datos$A6=='Sí',"EdocivilHijos"] <-1
datos[(datos$A4=="Casado(a)"| datos$A4=='Unión libre') & datos$A6=='No',"EdocivilHijos"] <-2
datos[(datos$A4=="Soltero(a)"|datos$A4=="Divorciado(a)"| datos$A4=="Viudo(a)") & datos$A6=='Sí',"EdocivilHijos"] <-3
datos[(datos$A4=="Soltero(a)"|datos$A4=="Divorciado(a)"| datos$A4=="Viudo(a)") & datos$A6=='No',"EdocivilHijos"] <-4
datos$EdocivilHijos <- factor(datos$EdocivilHijos,levels = c(1,2,3,4,5),labels = c("Casado con hijos","Casado sin hijos","Soltero con Hijos","Soltero sin HIjos","No contestó"))
###Creo la variable de tiempo casados
datos$TiempoCasados = datos$A5*12 + datos$A5_MESES
cortes<-list(
"4 años o menos"= c(0:48),
"De 5 a 9 años"= c(49:108),
"De 10 a 14 años"= c(109:168),
"De 15 a 19 años"= c(169:228),
"20 años o más"= c(228:600)
)
datos$TiempoJuntos<-NA
for(i in 1:length(cortes)){
misCN<- names(cortes)[i]
misCCn<- cortes[[i]]
datos[datos$TiempoCasados %in% misCCn,"TiempoJuntos"]<-i
}
datos$TiempoJuntos<- factor(datos$TiempoJuntos,levels = c(1,2,3,4,5), labels = names(cortes))
############# Creo la variable de edad de hijos
hijitos<-list(
"A9Primero"=c("A9_Hijo1_A_os","A9_Hijo1_Meses"),
"A9Segundo"=c("A9_Hijo2_A_os","A9_Hijo2_Meses"),
"A9Tercero"=c("A9_Hijo3_A_os","A9_Hijo3_Meses"),
"A9Cuarto"=c("A9_Hijo4_A_os","A9_Hijo4_Meses"),
"A9Quinto"=c("A9_Hijo5_A_os","A9_Hijo5_Meses"),
"A9Sexto"=c("A9_Hijo6_A_os","A9_Hijo6_Meses")
)
for(i in 1:length(hijitos)){
# i <- 1
hijitosSub <- hijitos[[i]]
nhijitosSub <- names(hijitos)[i]
edadhijo<-as.numeric(datos[,hijitosSub[1]])
edadhijo<- edadhijo*12
edadhijo<-rowSums(cbind(edadhijo,as.numeric(datos[,hijitosSub[2]])),na.rm = T)
edadhijo[is.na(datos[,hijitosSub[1]]) & is.na(datos[,hijitosSub[2]])]<-NA
edadhijo<- round(edadhijo,0)
cortes<-list(
"menos de 4 años"= c(0:48),
"entre 5 y 9 años"= c(49:108),
"entre 10 y 14 años"= c(109:168),
"más de 15 años"= c(169:800)
)
datos[,nhijitosSub]<-NA
for(i in 1:length(cortes)){
misCN<- names(cortes)[i]
misCCn<- cortes[[i]]
datos[edadhijo %in% misCCn,nhijitosSub]<-i
}
datos[,nhijitosSub]<- factor(datos[,nhijitosSub], levels = 1:4,labels = names(cortes))
}
hijitosEdad <- c("A9Primero","A9Segundo","A9Tercero","A9Cuarto","A9Quinto","A9Sexto")
###########Limpieza de variables
#exportarAbiertas(xpa = datos,xpb = "P17_B_BANCO",xpc = "Pregunta Bancos.csv" )
P17_b_bancor<-importaAbiertas(misDatos = datos, misVaria ="P17_B_BANCO",micatalog = read.csv("Pregunta Bancos1.csv"))
datos<- cbind(datos, P17_b_bancor)
#exportarAbiertas(xpa = datos,xpb = "P18_D_BANCO",xpc = "Pregunta BancosD.csv" )
P18_d_bancor<-importaAbiertas(misDatos = datos, misVaria ="P18_D_BANCO",micatalog = read.csv("Pregunta BancosDR.csv"))
datos<- cbind(datos, P18_d_bancor)
P13ModeloLimpia<-importaAbiertas(misDatos = datos, misVaria ="P15_3_MODELO",micatalog = read.csv("Ciclo de vida autos_motos_ModeloVF.csv"))
datos<- cbind(datos, P13ModeloLimpia)
P10ModeloLimpia<-importaAbiertas(misDatos = datos, misVaria ="P15_10_MODELO",micatalog = read.csv("Ciclo de vida autos_motos_ModeloVF.csv"))
datos<- cbind(datos, P10ModeloLimpia)
###########################Agrupacion de preguntas
##Uso de transporte
misP <- nombresR(datos,"P15_2")
misP <- matrix(data = misP,nrow = 6,ncol = 5)
listaNombres<-list()
for(i in 1:nrow(misP)){
# i <- 1
yoSoy <- misP[i,1]
yoSoy <- paste("Rr_", yoSoy,sep="")
listaNombres[[i]]<-paste(misP[i,])
names(listaNombres)[[i]]<-yoSoy
}
for(i in 1:length(listaNombres)){
# i<-1
mmm<- names(listaNombres)[i]
mhijitos<- listaNombres[[i]]
datos[,mmm]<-FALSE
for(t in 1:length(mhijitos)){
# t<-2
logico<- datos[,mhijitos[t]]==1
logico[is.na(logico)]<-FALSE
datos[logico,mmm]<-TRUE
}
}
misP <- nombresR(datos,"P15_9_AUTO")
misP <- matrix(data = misP,nrow = 6,ncol = 5)
listaNombres<-list()
for(i in 1:nrow(misP)){
# i <- 1
yoSoy <- misP[i,1]
yoSoy <- paste("Rr_", yoSoy,sep="")
listaNombres[[i]]<-paste(misP[i,])
names(listaNombres)[[i]]<-yoSoy
}
for(i in 1:length(listaNombres)){
# i<-1
mmm<- names(listaNombres)[i]
mhijitos<- listaNombres[[i]]
datos[,mmm]<-FALSE
for(t in 1:length(mhijitos)){
# t<-2
logico<- datos[,mhijitos[t]]==1
logico[is.na(logico)]<-FALSE
datos[logico,mmm]<-TRUE
}
}
misP <- nombresR(datos,"P_15_9_MOTO")
misP <- matrix(data = misP,nrow = 6,ncol = 5)
listaNombres<-list()
for(i in 1:nrow(misP)){
# i <- 1
yoSoy <- misP[i,1]
yoSoy <- paste("Rr_", yoSoy,sep="")
listaNombres[[i]]<-paste(misP[i,])
names(listaNombres)[[i]]<-yoSoy
}
for(i in 1:length(listaNombres)){
# i<-1
mmm<- names(listaNombres)[i]
mhijitos<- listaNombres[[i]]
datos[,mmm]<-FALSE
for(t in 1:length(mhijitos)){
# t<-2
logico<- datos[,mhijitos[t]]==1
logico[is.na(logico)]<-FALSE
datos[logico,mmm]<-TRUE
}
}
##########################################################################################
# Banner
bandera1 <- c("Total","P10","F1Genero","NSE","Edad_Rango","Plaza","EdocivilHijos")
bandera3 <- c("TOtal","P14")
nombresR(datos,"11")
# names(datos)[1:100]
#
# table(
#   datos$P10
# )
# datos[datos$P10=="Automóvil",]
#
table(datos$EdocivilHijos)
frecuentator(fTtabla = datos[((datos$P10=="Ambas")& (datos$P16_A_AMBOS== "Sí")&(datos$P16_B_AMBOS_Mi_Esposo___Esposa=="1")),],fTvariables = nombresR(datos,"P16_D_AMBOS_ESPOSAESPOSO")[1:12],fTlevels = F,fbanner = bandera1)
nombresR(datos,"P16_D_AMBOS_ESPOSAESPOSO")
table(datos$P16_D_AMBOS_ESPOSAESPOSO_OTRO)
levels(datos$P16_D_AMBOS_ESPOSAESPOSO_OTRO)
frecuentator(fTtabla = datos[((datos$P10=="Moto / Motocicleta")& (datos$P15_A== "Sí")&(datos$P15_B_Mi_Esposo___Esposa=="1")),],fTvariables = nombresR(datos,"P15_D_EsposoEsposa"),fTlevels = F,fbanner = bandera1)
